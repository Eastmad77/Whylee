# netlify.toml â€” robust static serving + CSP (v9007)

[build]
  publish = "."
  command = "npm install"

[build.environment]
  NODE_VERSION = "18"
  NPM_FLAGS   = "--no-audit --no-fund"

[functions]
  node_bundler = "esbuild"
  external_node_modules = ["stripe", "firebase-admin"]

############################################
# Redirect order matters: put pass-throughs
# BEFORE the SPA fallback so real files win
############################################
# Pass-through for scripts (prevents SPA fallback on /scripts/*.js?v=...)
[[redirects]]
  from = "/scripts/*"
  to   = "/scripts/:splat"
  status = 200
  force  = true

# Pass-through for styles
[[redirects]]
  from = "/styles/*"
  to   = "/styles/:splat"
  status = 200
  force  = true

# Pass-through for media (images/posters/avatars)
[[redirects]]
  from = "/media/*"
  to   = "/media/:splat"
  status = 200
  force  = true

# SPA fallback (keep this LAST)
[[redirects]]
  from = "/*"
  to   = "/index.html"
  status = 200

############################################
# Headers
############################################

# Functions CORS
[[headers]]
  for = "/.netlify/functions/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization"

# Cache controls
[[headers]]
  for = "/service-worker.js"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"

[[headers]]
  for = "/styles/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/scripts/*"
  [headers.values]
    # Make absolutely sure JS is served as JS (not HTML)
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/media/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/site.webmanifest"
  [headers.values]
    Cache-Control = "public, max-age=3600"

# Security headers + CSP
[[headers]]
  for = "/*"
  [headers.values]
    Content-Security-Policy = """
      default-src 'self';
      base-uri 'self';
      frame-ancestors 'self';
      img-src 'self' data: blob:;
      media-src 'self' data: blob:;
      style-src 'self' 'unsafe-inline';
      script-src 'self' https://www.gstatic.com https://www.googletagmanager.com https://js.stripe.com;
      connect-src 'self' https://www.gstatic.com https://firestore.googleapis.com https://firebasestorage.googleapis.com https://identitytoolkit.googleapis.com https://securetoken.googleapis.com https://firebaseinstallations.googleapis.com https://www.googleapis.com https://api.stripe.com;
      font-src 'self' data:;
      object-src 'none';
      frame-src 'self' https://js.stripe.com;
      manifest-src 'self';
      worker-src 'self';
    """
    Permissions-Policy = "geolocation=(), microphone=(), camera=()"
    Referrer-Policy = "strict-origin-when-cross-origin"
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "SAMEORIGIN"
